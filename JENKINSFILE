pipeline {
    agent any

    stages {
        stage('Jenkins awake') {
            steps {
                echo 'Hello World'
            }
        }
        stage('Checkout from GitHub') {
            steps {
                
                // Clean the workspace prior to checkout
                echo 'Cleaning workspace'
                cleanWs()
                echo 'Workspace cleaned'
                
                // Checkout  code from GitHub repository
                echo 'Checking out code from Github'
                git 'https://github.com/dmiek/devops.git'  
                echo 'Files checked out'
            }
        }
        stage('Running Tests with PyTest and PyTest-BDD') {
            steps {
                echo 'Running PyTest'
                sh 'pytest -rA'
            }
        }
        stage('Creating Test Coverage with Coverage') {
            steps {
                echo 'Erasing previous coverage report'
                sh 'coverage erase'
                echo 'Running PyTest through Coverage'
                sh 'coverage run -m pytest'
                echo 'Creating XML report'
                sh 'coverage xml -i'
            }
        }
        stage('Stop current webpage container') {
            steps {
                script {
                    try {
                        sh 'docker stop $(docker ps -q --filter ancestor=taf-website-container )'
                    } catch (Exception e) {
                        echo 'Exception occurred'
                    }
                }
              
            }
        }
        stage('Build docker image') {
            steps {
                sh 'ls'
                sh 'docker build -t taf-website-container . idioten/website/Dockerfile'
            }
        }
        stage('Run website container') {
            steps {
                sh 'docker run -it -d -p 80:80 taf-website-container'
            }
        }
        stage('Remove dangling images') {
            steps {
                sh 'docker rmi -f $(docker images -f "dangling=true" -q)'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                // Performing SonarQube analysis
                sh '/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_Scanner/bin/sonar-scanner -X -Dsonar.host.url=http://testaerfest.ddns.net:9000 -Dsonar.projectName=testaerfestsonar -Dsonar.projectVersion=1.0 -Dsonar.projectKey=sonartestaerfest -Dsonar.sources=. -Dsonar.projectBaseDir=/var/lib/jenkins/workspace/TotalTest -Dsonar.python.coverage.reportPaths=/var/lib/jenkins/workspace/TotalTest/coverage.xml -Dsonar.exclusions=*coverage*'
            }
        }
    }
}